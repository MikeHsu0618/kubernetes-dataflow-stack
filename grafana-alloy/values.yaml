fullnameOverride: alloy-collector

crds:
  create: false

alloy:
  extraEnv:
    - name: LOKI_HOST
      value: "loki-distributor.loki:3100"
    - name: TEMPO_HOST
      value: "tempo-distributor.tempo:4318"
    - name: CLUSTER_NAME
      value: "Orbstack-cluster"
  configMap:
    create: true
    content: |
      logging {
        level  = "debug"
        format = "logfmt"
      }
      
      loki.write "loki" {
        endpoint {
          url = format("http://%s/loki/api/v1/push", env("LOKI_HOST"))
        }
      }
      
      loki.source.api "logs" {
        http {
          listen_address = "0.0.0.0"
          listen_port = 9999
        }
        use_incoming_timestamp = true
        forward_to = [
          loki.write.loki.receiver,
        ]
      }
      
      otelcol.receiver.otlp "default" {
        http {}
        grpc {}
      
        output {
          traces  = [otelcol.processor.memory_limiter.default.input]
        }
      }
      otelcol.processor.memory_limiter "default" {
        check_interval = "5s"
        limit_percentage = 80
        spike_limit_percentage = 25
        output {
          traces  = [otelcol.processor.batch.default.input]
        }
      }
      otelcol.processor.batch "default" {
        timeout = "10s"
        send_batch_size = 10000
        output {
          traces  = [otelcol.processor.attributes.default.input]
        }
      }
      otelcol.processor.attributes "default" {
        action {
          key = "cluster"
          value = env("CLUSTER_NAME")
          action = "insert"
        }
        output {
          traces = [otelcol.processor.k8sattributes.default.input]
        }
      }
      otelcol.processor.k8sattributes "default" {
        extract {
          metadata = [
            "k8s.namespace.name",
            "k8s.pod.name",
            "k8s.container.name",
          ]
        }
        output {
          traces = [otelcol.exporter.otlphttp.tempo.input]
        }
      }
      
      otelcol.exporter.otlphttp "tempo" {
        client {
          endpoint = format("http://%s", env("TEMPO_HOST"))
        }
      }


  extraPorts:
    - name: "otlp-grpc"
      port: 4317
      targetPort: 4317
      protocol: "TCP"
    - name: "otlp-http"
      port: 4318
      targetPort: 4318
      protocol: "TCP"
    - name: "loki"
      port: 9999
      targetPort: 9999
      protocol: "TCP"

  clustering:
    enabled: true
  stabilityLevel: "generally-available"
  # -- Path to where Grafana Alloy stores data (for example, the Write-Ahead Log).
  # By default, data is lost between reboots.
  storagePath: /tmp/alloy
  enableReporting: false


controller:
  type: 'statefulset'
  replicas: 2

service:
  enabled: true

serviceMonitor:
  enabled: true

ingress:
  # -- Enables ingress for Alloy (Faro port)
  enabled: ture
  path: /
  faroPort: 9999
  host: []
