replicaCount: 1

image:
  repository: "jeffail/benthos"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /secrets/gcp-sa-file


resources:
#  requests:
#    cpu: 1Gi
#    memory: 1Gi
  limits:
  cpu: 1Gi
  memory: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes:
  - name: gcp-sa
    secret:
      secretName: gcp-sa-file
      items:
        - key: gcp-sa-file
          path: gcp-sa-file.json
extraVolumeMounts:
  - name: gcp-sa
    mountPath: "/secrets"
    readOnly: true


streams:
  enabled: false
  streamsConfigMap: ""
  api:
    enable: true

  # /benthos.yaml HTTP configuration
http:
  # Disabling HTTP server will prevent service and ingress objects from being created.
  enabled: true
  ### These are the current defaults for the following HTTP component parameters;
  ### uncomment and edit any that require adjustment
  # address: 0.0.0.0:4195
  # rootPath: /benthos
  # debugEndpoints: false
  cors:
    enabled: false
    # Uncomment and provide list when .Values.http.cors.enabled is true
    # allowedOrigins: []
  tls:
    enabled: false
    # Create a secret of type `kubernetes.io/tls` in the same namespace and add the name here
    # secretName: ""

# hot reload mode
watch: false

# /benthos.yaml configuration
config: |
  input:
    generate:
      interval: 0.1s
      count: 100000000
      mapping: |
        root = if random_int() % 2 == 0 {
          {
            "type": "foo",
            "foo": "is yummy"
          }
        } else {
          {
            "type": "bar",
            "bar": "is gross"
          }
        }

  output:  
    gcp_pubsub:
      project: "fresh-project"
      topic: "pubsub-benmark-topic-benthos"
      max_in_flight: 1000
#    stdout:
#      codec: lines
